/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.tournament;

import form.tournament.FrmDetailsTournament;
import controller.Communication;
import domain.Tournament;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import components.TableModelTournament;

/**
 *
 * @author DELL
 */
public class FrmSearchTournament extends javax.swing.JDialog {
    
    List<Tournament> tournaments;
    List<Tournament> newTournaments;
    int index;

    /**
     * Creates new form FrmSearchTournament
     */
    public FrmSearchTournament(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Search Tournaments");
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTournaments = new javax.swing.JTable();
        btnDetails = new javax.swing.JButton();
        btnUpdateTable = new javax.swing.JButton();
        panelSearch = new javax.swing.JPanel();
        cmbATPType = new javax.swing.JComboBox<>();
        cmbSearchValue = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Tournaments:");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblTournaments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTournaments);

        btnDetails.setText("Details");
        btnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailsActionPerformed(evt);
            }
        });

        btnUpdateTable.setText("Update table");
        btnUpdateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btnUpdateTable, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(btnUpdateTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        panelSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cmbATPType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "250", "500", "1000", "2000" }));

        cmbSearchValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "City", "Type" }));
        cmbSearchValue.setSelectedIndex(-1);
        cmbSearchValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchValueActionPerformed(evt);
            }
        });

        jLabel3.setText("Select a value to search by:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSearchLayout = new javax.swing.GroupLayout(panelSearch);
        panelSearch.setLayout(panelSearchLayout);
        panelSearchLayout.setHorizontalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30))
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)))
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSearchLayout.createSequentialGroup()
                        .addComponent(cmbSearchValue, 0, 141, Short.MAX_VALUE)
                        .addGap(40, 40, 40))
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbATPType, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        panelSearchLayout.setVerticalGroup(
            panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel3)
                    .addComponent(cmbSearchValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbATPType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(panelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if(index == 1) {
            String city = txtSearch.getText().trim();
            if(city == null || city.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please insert city!");
                return;
            }
            newTournaments = new ArrayList<>();
            try {
                tournaments = (List<Tournament>) Communication.getInstance().getAllTournaments();
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(FrmSearchTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            for (Tournament t : tournaments) {
                if(t.getCity().equalsIgnoreCase(city)) {
                    newTournaments.add(t);
                }
            } 
        } else {
            if(cmbATPType.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Please choose type of tournament!");
                return;
            }
            
            Integer atpType = Integer.parseInt((String) cmbATPType.getSelectedItem());
            newTournaments = new ArrayList<>();
            try {
                tournaments = (List<Tournament>) Communication.getInstance().getAllTournaments();
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(FrmSearchTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            for (Tournament t : tournaments) {
                if(t.getAtpType().equals(atpType)) {
                    newTournaments.add(t);
                }
            }
        }
        if(newTournaments.isEmpty()) {
            List<Tournament> t = new ArrayList<>();
            prepareTable(t);
            btnDetails.setVisible(false);
            btnUpdateTable.setVisible(false);
            JOptionPane.showMessageDialog(this, "The system cannot find tournaments at the given value.", "Search", JOptionPane.ERROR_MESSAGE);
            return;
        }
        prepareTable(newTournaments);
        btnDetails.setVisible(true);
        btnUpdateTable.setVisible(true);
        JOptionPane.showMessageDialog(this, "The system has found tournaments at the given value.", "Search", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailsActionPerformed
        try {
            Tournament tournament = new Tournament();
            tournaments = (List<Tournament>) Communication.getInstance().getAllTournaments();
            String name = (String) (tblTournaments.getModel().getValueAt(tblTournaments.getSelectedRow(), 0));
            for (Tournament t : tournaments) {
                if(t.getName().equals(name)) {
                    tournament = t;
                }
            }
            JOptionPane.showMessageDialog(this, "The system has loaded tournament.", "Details ", JOptionPane.INFORMATION_MESSAGE);
            new FrmDetailsTournament(null, true, tournament).setVisible(true);
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(FrmSearchTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "The system cannot load tournament.", "Details ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDetailsActionPerformed

    private void cmbSearchValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchValueActionPerformed
        if(cmbSearchValue.getSelectedItem().equals("City")) {
           lblSearch.setVisible(true);
           lblSearch.setText("Enter the city you want to search: ");
           txtSearch.setVisible(true);
           cmbATPType.setVisible(false);
           btnSearch.setEnabled(true);
           index = 1;
        } else {
           lblSearch.setVisible(true);
           lblSearch.setText("Choose the type of tournament: ");
           cmbATPType.setVisible(true);
           cmbATPType.setSelectedIndex(-1);
           txtSearch.setVisible(false);
           btnSearch.setEnabled(true);
           index = 2;
        }
    }//GEN-LAST:event_cmbSearchValueActionPerformed

    private void btnUpdateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTableActionPerformed
        if(index == 1){
            String city = txtSearch.getText().trim();
            newTournaments = new ArrayList<>();
            for (Tournament t : tournaments) {
                if(t.getCity().equalsIgnoreCase(city)) {
                    newTournaments.add(t);
                }
            }
        } else {
            Integer atpType = Integer.parseInt((String) cmbATPType.getSelectedItem());
            newTournaments = new ArrayList<>();
            try {
                tournaments = (List<Tournament>) Communication.getInstance().getAllTournaments();
            } catch (Exception ex) {
                java.util.logging.Logger.getLogger(FrmSearchTournament.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            for (Tournament t : tournaments) {
                if(t.getAtpType().equals(atpType)) {
                    newTournaments.add(t);
                }
            }
        }
        prepareTable(newTournaments);
    }//GEN-LAST:event_btnUpdateTableActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetails;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateTable;
    private javax.swing.JComboBox<String> cmbATPType;
    private javax.swing.JComboBox<String> cmbSearchValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JPanel panelSearch;
    private javax.swing.JTable tblTournaments;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void prepareTable(List<Tournament> t) {
        tblTournaments.setModel(new TableModelTournament(t));
    }

    private void prepareForm() {
        btnDetails.setVisible(false);
        lblSearch.setVisible(false);
        txtSearch.setVisible(false);
        cmbATPType.setVisible(false);
        btnDetails.setVisible(false);
        btnUpdateTable.setVisible(false);
        btnSearch.setEnabled(false);
        tblTournaments.setModel(new TableModelTournament(new ArrayList<>()));
    }
}
