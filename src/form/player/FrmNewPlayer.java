package form.player;

import controller.Communication;
import domain.ATPList;
import domain.Player;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import validator.IValidator;
import validator.ValidatorException;
import validator.components.RegularValidator;

/**
 *
 * @author DELL
 */
public class FrmNewPlayer extends javax.swing.JDialog {
    
    Player player;
    Player x;
    IValidator validator = new RegularValidator();
    
    public FrmNewPlayer(java.awt.Frame parent, boolean modal, Player player) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Create Player");
        this.player = player;
        try {
            prepareForm();
        } catch (Exception ex) {
            Logger.getLogger(FrmNewPlayer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtFirstName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txtBirthday = new javax.swing.JTextField();
        lblBirthday = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        lblState = new javax.swing.JLabel();
        lblPoints = new javax.swing.JLabel();
        txtPoints = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        lblWeight = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblATPList = new javax.swing.JLabel();
        cmbATPList = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnViewAllPlayers = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Insert player's data"));

        lblFirstName.setText("First name:");

        lblLastName.setText("Last name:");

        lblBirthday.setText("Birthday:");

        lblState.setText("State:");

        lblPoints.setText("Points:");

        lblHeight.setText("Height:");

        lblWeight.setText("Weight:");

        lblATPList.setText("ATPList:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblATPList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblWeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblHeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFirstName)
                    .addComponent(txtLastName)
                    .addComponent(txtBirthday)
                    .addComponent(txtState)
                    .addComponent(txtPoints)
                    .addComponent(txtHeight)
                    .addComponent(txtWeight)
                    .addComponent(cmbATPList, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBirthday)
                    .addComponent(txtBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPoints)
                    .addComponent(txtPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeight)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeight)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblATPList)
                    .addComponent(cmbATPList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnViewAllPlayers.setText("View All Players");
        btnViewAllPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllPlayersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnViewAllPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnViewAllPlayers, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            try {
                validator.validatePlayer(txtFirstName.getText().trim(), txtLastName.getText().trim(), txtState.getText().trim(), txtPoints.getText(), txtHeight.getText(), txtWeight.getText());
            } catch(ValidatorException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(cmbATPList.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Please select ATP List!", "", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(txtBirthday.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Fill in the field for birthday!", "", JOptionPane.ERROR_MESSAGE);
            }
            String firstName = txtFirstName.getText().trim();
            String lastName = txtLastName.getText().trim();
            LocalDate birthday;
            try {
                LocalDate.parse(txtBirthday.getText());
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Please insert date in format YYYY/MM/DD", "", JOptionPane.ERROR_MESSAGE);
                return;
            }
            birthday = LocalDate.parse(txtBirthday.getText());
            LocalDate today = LocalDate.now(ZoneId.systemDefault());
            String state = txtState.getText().trim();
            Integer points = Integer.parseInt(txtPoints.getText());
            Double height = Double.parseDouble(txtHeight.getText());
            Double weight = Double.parseDouble(txtWeight.getText());
            ATPList atpList = (ATPList) cmbATPList.getSelectedItem();
            
            if(birthday.isAfter(today)) {
                JOptionPane.showMessageDialog(this, "Please insert date that isn't after today's date!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            List<Player> players = Communication.getInstance().getAllPlayers();
            for (Player p : players) {
                if(p.getFirstName().equals(firstName) && p.getLastName().equals(lastName) && p.getBirthday().equals(birthday) && p.getAtpList().equals(atpList)) {
                    JOptionPane.showMessageDialog(this, "Player " + firstName + " " + lastName + " already exists!", "Data Entry Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        
            int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to save playe?", "", JOptionPane.YES_NO_CANCEL_OPTION);
            if(option == 0) {
                try {
                    player.setFirstName(firstName);
                    player.setLastName(lastName);
                    player.setBirthday(birthday);
                    player.setState(state);
                    player.setPoints(points);
                    player.setHeight(height);
                    player.setWeight(weight);
                    player.setAtpList(atpList);
                    x = Communication.getInstance().updatePlayer(player);
                    JOptionPane.showMessageDialog(this, "The system has memorized player.", "Update", JOptionPane.INFORMATION_MESSAGE);

                    txtFirstName.setEnabled(false);
                    txtLastName.setEnabled(false);
                    txtHeight.setEnabled(false);
                    txtWeight.setEnabled(false);
                    txtPoints.setEnabled(false);
                    txtBirthday.setEnabled(false);
                    txtState.setEnabled(false);
                    cmbATPList.setEnabled(false);
                    btnViewAllPlayers.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(FrmDetailsPlayer.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "The system cannot memorize player.", "Update", JOptionPane.ERROR_MESSAGE);
                }
            } else if(option == 1){
                return;
            } else {
                this.dispose();
            }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error trying to save player!" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println(ex.getMessage());
            }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnViewAllPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllPlayersActionPerformed
        this.dispose();
        new FrmViewPlayers(null, true).setVisible(true);
    }//GEN-LAST:event_btnViewAllPlayersActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnViewAllPlayers;
    private javax.swing.JComboBox<ATPList> cmbATPList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblATPList;
    private javax.swing.JLabel lblBirthday;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPoints;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JTextField txtBirthday;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPoints;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() throws Exception {
        fillComboBox();
        
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                try {
                    if(player.getFirstName().equals("def") || cmbATPList.getSelectedIndex() == 1) {
                        Communication.getInstance().deletePlayer(player);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(FrmNewPlayer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        btnViewAllPlayers.setVisible(false);
    }

    private void fillComboBox() throws Exception {
        List<ATPList> atplists =  Communication.getInstance().getAllATPLists();
        for (ATPList a : atplists) {
            cmbATPList.addItem(a);
        }
        cmbATPList.setSelectedIndex(-1);
    }

}
